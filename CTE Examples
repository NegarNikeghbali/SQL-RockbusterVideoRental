# The query uses CTE to answer key questions

## Customer Base World Distribution Map

SELECT DISTINCT country, COUNT(DISTINCT customer_id) AS customer_count
FROM
customer cu
INNER JOIN address A ON cu.address_id = A.address_id
INNER JOIN city Ci ON A.city_id = Ci.city_id
INNER JOIN country C ON Ci.country_id = C.country_id
GROUP BY country
ORDER BY customer_count DESC

## Total Payments per Countries 

SELECT DISTINCT country, SUM(amount) AS total_amount_paid
FROM
payment pa
INNER JOIN customer cu ON pa.customer_id = cu.customer_id
INNER JOIN address A ON cu.address_id = A.address_id
INNER JOIN city ci ON A.city_id = ci.city_id
INNER JOIN country D ON ci.country_id = D.country_id
GROUP BY country
ORDER BY total_amount_paid DESC

## Top 10 Countries with the Highest Customer Counts

SELECT DISTINCT country, COUNT(DISTINCT customer_id) AS customer_count
FROM
customer cu 
INNER JOIN address A ON cu.address_id = A.address_id
INNER JOIN city Ci ON A.city_id = Ci.city_id
INNER JOIN country D ON Ci.country_id = D.country_id
GROUP BY country
ORDER BY customer_count DESC
LIMIT 10

## Top 10 Countries with the Highest Revenue

SELECT DISTINCT country, SUM(amount) AS total_amount_paid
FROM
payment pa
INNER JOIN customer cu ON pa.customer_id = cu.customer_id
INNER JOIN address A ON cu.address_id = A.address_id
INNER JOIN city ci ON A.city_id = ci.city_id
INNER JOIN country D ON ci.country_id = D.country_id
GROUP BY country
ORDER BY total_amount_paid DESC
LIMIT 10

## Top 10 Cities with the Highest Revenue

SELECT DISTINCT city, SUM(amount) AS total_amount_paid
FROM
payment pa
INNER JOIN customer cu ON pa.customer_id = cu.customer_id
INNER JOIN address A ON A.address_id = cu.address_id
INNER JOIN city ci ON A.city_id = ci.city_id
GROUP BY city
ORDER BY total_amount_paid DESC
LIMIT 10

## Revenue and Title Counts per Genre

WITH GenreRevenue AS (
SELECT E.name AS genre_name, SUM(amount) AS total_amount_paid
FROM payment A
INNER JOIN rental B ON A.rental_id = B.rental_id
INNER JOIN inventory C ON B.inventory_id = C.inventory_id
INNER JOIN film_category D ON C.film_id = D.film_id
INNER JOIN category E ON D.category_id = E.category_id
GROUP BY E.name
),
GenreTitleCounts AS (
SELECT B.name AS genre_name, COUNT(DISTINCT film_id) AS title_count
FROM film_category A
INNER JOIN category B ON A.category_id = B.category_id
GROUP BY B.name
)
SELECT gr.genre_name, gr.total_amount_paid, gtc.title_count
FROM GenreRevenue gr
JOIN GenreTitleCounts gtc ON gr.genre_name = gtc.genre_name
ORDER BY gr.total_amount_paid DESC;

## Discriptive Statistics Information-AVG, MAX, MIN

SELECT	
MIN(rental_rate) AS min_rent,
MAX(rental_rate) AS max_rent,
ROUND(AVG(rental_rate), 2) AS avg_rent,
COUNT(rental_rate) AS count_rent_values,
COUNT (*) AS count_rows,
MIN(replacement_cost) AS min_replacement_cost,
MAX(replacement_cost) AS max_replacement_cost,
ROUND(AVG(replacement_cost), 2) AS avg_replacement_cost,
COUNT(replacement_cost) AS count_replacement_cost,
COUNT (*) AS count_replacement_cost,
MIN(rental_duration) AS min_rental_duration,
MAX(rental_duration) AS max_rental_duration,
ROUND(AVG(rental_duration), 2) AS avg_rental_duration,
COUNT(rental_duration) AS count_rental_duration,
COUNT (*) AS count_rental_duration
FROM film

## Discriptive Statistics Information-Mode

SELECT	
MODE () WITHIN GROUP (ORDER BY store_id) AS store_id_modal_value,
MODE () WITHIN GROUP (ORDER BY activebool) AS activebool_modal_id_value,
MODE () WITHIN GROUP (ORDER BY create_date) AS create_date_modal_value,
MODE () WITHIN GROUP (ORDER BY last_update) AS last_update_modal_value,
MODE () WITHIN GROUP (ORDER BY active) AS active_modal_value
FROM customer
